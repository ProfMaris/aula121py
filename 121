import cv2
import mediapipe as mp

cap = cv2.VideoCapture(0)

mp_hands = mp.solutions.hands
mp_drawing = mp.solutions.drawing_utils

hands = mp_hands.Hands(min_detection_confidence=0.8, min_tracking_confidence=0.5)

tipIds = [4, 8, 12, 16, 20]

def countFingers(image, hand_landmarks, handNo=0):
    fingerCount = 0
    hand = hand_landmarks[handNo]

    for id in range(len(tipIds)):
        finger = tipIds[id]
        if hand.landmark[finger].y < hand.landmark[finger - 2].y:
            fingerCount += 1

    cv2.putText(image, str(fingerCount), (10, 70), cv2.FONT_HERSHEY_PLAIN, 3, (0, 255, 0), 3)

    return fingerCount

def drawHandLandmarks(image, hand_landmarks):
    if hand_landmarks:
        for landmarks in hand_landmarks:
            mp_drawing.draw_landmarks(image, landmarks, mp_hands.HAND_CONNECTIONS)


while True:
    success, image = cap.read()

    image = cv2.flip(image, 1)

    results = hands.process(image)
    hand_landmarks = results.multi_hand_landmarks

    drawHandLandmarks(image, hand_landmarks)

    if hand_landmarks:
        fingerCount = countFingers(image, hand_landmarks)

        if fingerCount == 0:
            # Lógica para ação quando nenhum dedo está levantado
            pass
        elif fingerCount == 1:
            # Lógica para ação quando apenas 1 dedo está levantado
            pass
        elif fingerCount == 2:
            # Lógica para ação quando 2 dedos estão levantados
            pass
        elif fingerCount == 3:
            # Lógica para ação quando 3 dedos estão levantados
            pass
        elif fingerCount == 4:
            # Lógica para ação quando 4 dedos estão levantados
            pass
        elif fingerCount == 5:
            # Lógica para ação quando todos os 5 dedos estão levantados
            pass

    cv2.imshow("Controlador de Mídia", image)

    key = cv2.waitKey(1)
    if key == 32:
        break

cv2.destroyAllWindows()
